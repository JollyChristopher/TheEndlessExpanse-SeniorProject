package halemaster.ee.world.terrain.tile;

import halemaster.ee.world.Biome;
import halemaster.ee.world.BiomeClassifier;
import java.util.ArrayList;
import java.util.List;

/**
 * @name BiomeTile
 * 
 * @version 0.0.0
 * 
 * @date Jan 30, 2014
 */
public class BiomeTile 
{
  byte biomeId;
  List<Integer> tileId = new ArrayList<Integer>();

  public byte getBiomeId ()
  {
    return biomeId;
  }

  public void setBiomeId (byte biomeId)
  {
    this.biomeId = biomeId;
  }

  public Integer[] getTileIds ()
  {
    Integer[] tiles = new Integer[0];
    
    this.tileId.toArray (tiles);
    
    return tiles;
  }

  public void addTileId (int tileId, boolean overwrite)
  {
    int index = -1;
    boolean alreadyExists = false;
    Tile[] tiles = BiomeClassifier.getBiome (this.biomeId).getGeneration ()
            .getTiles ();
    
    for (int i = 0; !alreadyExists && -1 == index && 
            i < this.tileId.size (); i++)
    {
      if (this.tileId.get (i) == tileId)
      {
        alreadyExists = true;
      }
      else if (tiles[this.tileId.get (i)].getLayer () == 
              tiles[tileId].getLayer ())
      {
        index = i;
      }
    }
    
    if (!alreadyExists)
    {
      if (overwrite)
      {
        if (-1 != index)
        {
          this.tileId.set (index, tileId);
        }
        else
        {
          this.tileId.add (tileId);
        }
      }
      else
      {
        if (-1 == index)
        {
          this.tileId.add (tileId);
        }
      }
    }
  }
}
